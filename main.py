import os
import asyncio
import logging

from telegram import Update, InlineKeyboardButton, InlineKeyboardMarkup, InputFile
from telegram.ext import Application, CommandHandler, MessageHandler, CallbackQueryHandler, ContextTypes, filters

from fastapi import FastAPI, Request
from fastapi.responses import JSONResponse
import uvicorn

# –ù–∞—Å—Ç—Ä–æ–π–∫–∏
TOKEN = "8162219271:AAEhKmeNRLzORbDwXyLKH4tbUMMmtU-ypsw"
CRYPTOBOT_INVOICE = "IVGMYQSAqfgn"
CRYPTOBOT_LINK = f"https://t.me/send?start={CRYPTOBOT_INVOICE}"
ADMIN_ID = 6170133844  # –¢–≤–æ–π Telegram ID
FILE_PATH = "example.txt"
VIDEO_PATH = "rickroll.mp4"
LOG_FILE = "paid_users.txt"

# Telegram –±–æ—Ç
telegram_app = Application.builder().token(TOKEN).build()

# FastAPI —Å–µ—Ä–≤–µ—Ä
fastapi_app = FastAPI()
received_users = set()

# –õ–æ–≥–∏—Ä–æ–≤–∞–Ω–∏–µ
logging.basicConfig(level=logging.INFO)


# === Telegram: –ö–æ–º–∞–Ω–¥—ã ===
async def start(update: Update, context: ContextTypes.DEFAULT_TYPE):
    keyboard = InlineKeyboardMarkup([
        [InlineKeyboardButton("üí≥ –û–ø–ª–∞—Ç–∏—Ç—å 0.1 USDT", url=CRYPTOBOT_LINK)],
        [InlineKeyboardButton("üì© –ü–æ–¥–¥–µ—Ä–∂–∫–∞", callback_data="support")],
        [InlineKeyboardButton("‚ÑπÔ∏è –û –±–æ—Ç–µ", callback_data="about")]
    ])
    await update.message.reply_text(
        "–ü—Ä–∏–≤–µ—Ç! –ß—Ç–æ–±—ã –ø–æ–ª—É—á–∏—Ç—å —Ñ–∞–π–ª, –æ–ø–ª–∞—Ç–∏ 0.1 USDT —á–µ—Ä–µ–∑ CryptoBot –∏ –ø–æ–ª—É—á–∏—à—å –ø—Ä–∏–∑ üéÅ",
        reply_markup=keyboard
    )


async def echo(update: Update, context: ContextTypes.DEFAULT_TYPE):
    if update.message:
        with open(VIDEO_PATH, "rb") as vid:
            await update.message.reply_video(vid, caption="üé∂ –ù–∏–∫–æ–≥–¥–∞ —Ç–µ–±—è –Ω–µ –ø–æ–¥–≤–µ–¥—É...")


async def unknown(update: Update, context: ContextTypes.DEFAULT_TYPE):
    await update.message.reply_text("–ù–µ –ø–æ–Ω–∏–º–∞—é —Ç–∞–∫—É—é –∫–æ–º–∞–Ω–¥—É üòÖ")


async def button_callback(update: Update, context: ContextTypes.DEFAULT_TYPE):
    query = update.callback_query
    await query.answer()

    if query.data == "support":
        await query.edit_message_text("üì© –ü–∏—à–∏ –Ω–∞ –ø–æ—á—Ç—É: a7xspurius@gmail.com")
    elif query.data == "about":
        await query.edit_message_text("–£ –∫–∞–¥–∂–∏—Ç–∞ –µ—Å—Ç—å –¥–ª—è —Ç–µ–±—è —Å–∫—É–º–∞, –µ—Å–ª–∏ —É —Ç–µ–±—è –µ—Å—Ç—å –º–æ–Ω–µ—Ç—ã –¥–ª—è –∫–∞–¥–∂–∏—Ç–∞, –¥—Ä—É–≥.")


# === FastAPI: –û–±—Ä–∞–±–æ—Ç–∫–∞ –æ–ø–ª–∞—Ç—ã ===
@fastapi_app.post("/webhook")
async def payment_webhook(request: Request):
    data = await request.json()
    user_id = data.get("user_id")
    invoice_id = data.get("invoice_id")

    if invoice_id != CRYPTOBOT_INVOICE:
        return JSONResponse(content={"status": "ignored"}, status_code=200)

    if user_id in received_users:
        return JSONResponse(content={"status": "already_received"}, status_code=200)

    received_users.add(user_id)

    try:
        # –û—Ç–ø—Ä–∞–≤–∫–∞ —Ç–µ–∫—Å—Ç–æ–≤–æ–≥–æ —Ñ–∞–π–ª–∞
        file = InputFile(FILE_PATH)
        await telegram_app.bot.send_document(chat_id=user_id, document=file, caption="üìÑ –õ–æ–≤–∏ —Å–≤–æ–π –ø—Ä–∏–∑, –∫–æ–≤–±–æ–π")

        # –£–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ —Ç–µ–±–µ
        await telegram_app.bot.send_message(chat_id=ADMIN_ID, text=f"‚úÖ –û–ø–ª–∞—Ç–∞ –æ—Ç —é–∑–µ—Ä–∞: {user_id}")
    except Exception as e:
        await telegram_app.bot.send_message(chat_id=ADMIN_ID, text=f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–ø—Ä–∞–≤–∫–µ: {e}")
        return JSONResponse(content={"status": "error"}, status_code=500)

    return JSONResponse(content={"status": "ok"}, status_code=200)


# === –ì–ª–∞–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è ===
async def main():
    # –ó–∞–ø—É—Å–∫–∞–µ–º FastAPI
    config = uvicorn.Config(fastapi_app, host="0.0.0.0", port=8000, log_level="info")
    server = uvicorn.Server(config)

    # –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ–º Telegram-–±–æ—Ç–∞
    await telegram_app.initialize()
    await telegram_app.start()
    await telegram_app.updater.start_polling()

    # –ó–∞–ø—É—Å–∫–∞–µ–º FastAPI –∏ Telegram-–±–æ—Ç–∞ –ø–∞—Ä–∞–ª–ª–µ–ª—å–Ω–æ
    await asyncio.gather(
        server.serve(),
        telegram_app.updater.wait_for_stop(),  # –∂–¥—ë–º –∑–∞–≤–µ—Ä—à–µ–Ω–∏—è
    )

